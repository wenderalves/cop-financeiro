{"ast":null,"code":"import { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nexport let Subject = /*#__PURE__*/(() => {\n  class Subject extends Observable {\n    constructor() {\n      super();\n      this.closed = false;\n      this.currentObservers = null;\n      this.observers = [];\n      this.isStopped = false;\n      this.hasError = false;\n      this.thrownError = null;\n    }\n\n    lift(operator) {\n      const subject = new AnonymousSubject(this, this);\n      subject.operator = operator;\n      return subject;\n    }\n\n    _throwIfClosed() {\n      if (this.closed) {\n        throw new ObjectUnsubscribedError();\n      }\n    }\n\n    next(value) {\n      errorContext(() => {\n        this._throwIfClosed();\n\n        if (!this.isStopped) {\n          if (!this.currentObservers) {\n            this.currentObservers = Array.from(this.observers);\n          }\n\n          for (const observer of this.currentObservers) {\n            observer.next(value);\n          }\n        }\n      });\n    }\n\n    error(err) {\n      errorContext(() => {\n        this._throwIfClosed();\n\n        if (!this.isStopped) {\n          this.hasError = this.isStopped = true;\n          this.thrownError = err;\n          const {\n            observers\n          } = this;\n\n          while (observers.length) {\n            observers.shift().error(err);\n          }\n        }\n      });\n    }\n\n    complete() {\n      errorContext(() => {\n        this._throwIfClosed();\n\n        if (!this.isStopped) {\n          this.isStopped = true;\n          const {\n            observers\n          } = this;\n\n          while (observers.length) {\n            observers.shift().complete();\n          }\n        }\n      });\n    }\n\n    unsubscribe() {\n      this.isStopped = this.closed = true;\n      this.observers = this.currentObservers = null;\n    }\n\n    get observed() {\n      var _a;\n\n      return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n\n    _trySubscribe(subscriber) {\n      this._throwIfClosed();\n\n      return super._trySubscribe(subscriber);\n    }\n\n    _subscribe(subscriber) {\n      this._throwIfClosed();\n\n      this._checkFinalizedStatuses(subscriber);\n\n      return this._innerSubscribe(subscriber);\n    }\n\n    _innerSubscribe(subscriber) {\n      const {\n        hasError,\n        isStopped,\n        observers\n      } = this;\n\n      if (hasError || isStopped) {\n        return EMPTY_SUBSCRIPTION;\n      }\n\n      this.currentObservers = null;\n      observers.push(subscriber);\n      return new Subscription(() => {\n        this.currentObservers = null;\n        arrRemove(observers, subscriber);\n      });\n    }\n\n    _checkFinalizedStatuses(subscriber) {\n      const {\n        hasError,\n        thrownError,\n        isStopped\n      } = this;\n\n      if (hasError) {\n        subscriber.error(thrownError);\n      } else if (isStopped) {\n        subscriber.complete();\n      }\n    }\n\n    asObservable() {\n      const observable = new Observable();\n      observable.source = this;\n      return observable;\n    }\n\n  }\n\n  Subject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n  };\n\n  return Subject;\n})();\nexport class AnonymousSubject extends Subject {\n  constructor(destination, source) {\n    super();\n    this.destination = destination;\n    this.source = source;\n  }\n\n  next(value) {\n    var _a, _b;\n\n    (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n  }\n\n  error(err) {\n    var _a, _b;\n\n    (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n  }\n\n  complete() {\n    var _a, _b;\n\n    (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n  }\n\n  _subscribe(subscriber) {\n    var _a, _b;\n\n    return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n  }\n\n}","map":{"version":3,"names":["Observable","Subscription","EMPTY_SUBSCRIPTION","ObjectUnsubscribedError","arrRemove","errorContext","Subject","constructor","closed","currentObservers","observers","isStopped","hasError","thrownError","lift","operator","subject","AnonymousSubject","_throwIfClosed","next","value","Array","from","observer","error","err","length","shift","complete","unsubscribe","observed","_a","_trySubscribe","subscriber","_subscribe","_checkFinalizedStatuses","_innerSubscribe","push","asObservable","observable","source","create","destination","_b","call","subscribe"],"sources":["D:/wender/projetos/cop-financeiro/financeiro/node_modules/rxjs/dist/esm/internal/Subject.js"],"sourcesContent":["import { Observable } from './Observable';\nimport { Subscription, EMPTY_SUBSCRIPTION } from './Subscription';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { arrRemove } from './util/arrRemove';\nimport { errorContext } from './util/errorContext';\nexport class Subject extends Observable {\n    constructor() {\n        super();\n        this.closed = false;\n        this.currentObservers = null;\n        this.observers = [];\n        this.isStopped = false;\n        this.hasError = false;\n        this.thrownError = null;\n    }\n    lift(operator) {\n        const subject = new AnonymousSubject(this, this);\n        subject.operator = operator;\n        return subject;\n    }\n    _throwIfClosed() {\n        if (this.closed) {\n            throw new ObjectUnsubscribedError();\n        }\n    }\n    next(value) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                if (!this.currentObservers) {\n                    this.currentObservers = Array.from(this.observers);\n                }\n                for (const observer of this.currentObservers) {\n                    observer.next(value);\n                }\n            }\n        });\n    }\n    error(err) {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.hasError = this.isStopped = true;\n                this.thrownError = err;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().error(err);\n                }\n            }\n        });\n    }\n    complete() {\n        errorContext(() => {\n            this._throwIfClosed();\n            if (!this.isStopped) {\n                this.isStopped = true;\n                const { observers } = this;\n                while (observers.length) {\n                    observers.shift().complete();\n                }\n            }\n        });\n    }\n    unsubscribe() {\n        this.isStopped = this.closed = true;\n        this.observers = this.currentObservers = null;\n    }\n    get observed() {\n        var _a;\n        return ((_a = this.observers) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    _trySubscribe(subscriber) {\n        this._throwIfClosed();\n        return super._trySubscribe(subscriber);\n    }\n    _subscribe(subscriber) {\n        this._throwIfClosed();\n        this._checkFinalizedStatuses(subscriber);\n        return this._innerSubscribe(subscriber);\n    }\n    _innerSubscribe(subscriber) {\n        const { hasError, isStopped, observers } = this;\n        if (hasError || isStopped) {\n            return EMPTY_SUBSCRIPTION;\n        }\n        this.currentObservers = null;\n        observers.push(subscriber);\n        return new Subscription(() => {\n            this.currentObservers = null;\n            arrRemove(observers, subscriber);\n        });\n    }\n    _checkFinalizedStatuses(subscriber) {\n        const { hasError, thrownError, isStopped } = this;\n        if (hasError) {\n            subscriber.error(thrownError);\n        }\n        else if (isStopped) {\n            subscriber.complete();\n        }\n    }\n    asObservable() {\n        const observable = new Observable();\n        observable.source = this;\n        return observable;\n    }\n}\nSubject.create = (destination, source) => {\n    return new AnonymousSubject(destination, source);\n};\nexport class AnonymousSubject extends Subject {\n    constructor(destination, source) {\n        super();\n        this.destination = destination;\n        this.source = source;\n    }\n    next(value) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.next) === null || _b === void 0 ? void 0 : _b.call(_a, value);\n    }\n    error(err) {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.error) === null || _b === void 0 ? void 0 : _b.call(_a, err);\n    }\n    complete() {\n        var _a, _b;\n        (_b = (_a = this.destination) === null || _a === void 0 ? void 0 : _a.complete) === null || _b === void 0 ? void 0 : _b.call(_a);\n    }\n    _subscribe(subscriber) {\n        var _a, _b;\n        return (_b = (_a = this.source) === null || _a === void 0 ? void 0 : _a.subscribe(subscriber)) !== null && _b !== void 0 ? _b : EMPTY_SUBSCRIPTION;\n    }\n}\n"],"mappings":"AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,SAASC,YAAT,EAAuBC,kBAAvB,QAAiD,gBAAjD;AACA,SAASC,uBAAT,QAAwC,gCAAxC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,WAAaC,OAAb;EAAO,MAAMA,OAAN,SAAsBN,UAAtB,CAAiC;IACpCO,WAAW,GAAG;MACV;MACA,KAAKC,MAAL,GAAc,KAAd;MACA,KAAKC,gBAAL,GAAwB,IAAxB;MACA,KAAKC,SAAL,GAAiB,EAAjB;MACA,KAAKC,SAAL,GAAiB,KAAjB;MACA,KAAKC,QAAL,GAAgB,KAAhB;MACA,KAAKC,WAAL,GAAmB,IAAnB;IACH;;IACDC,IAAI,CAACC,QAAD,EAAW;MACX,MAAMC,OAAO,GAAG,IAAIC,gBAAJ,CAAqB,IAArB,EAA2B,IAA3B,CAAhB;MACAD,OAAO,CAACD,QAAR,GAAmBA,QAAnB;MACA,OAAOC,OAAP;IACH;;IACDE,cAAc,GAAG;MACb,IAAI,KAAKV,MAAT,EAAiB;QACb,MAAM,IAAIL,uBAAJ,EAAN;MACH;IACJ;;IACDgB,IAAI,CAACC,KAAD,EAAQ;MACRf,YAAY,CAAC,MAAM;QACf,KAAKa,cAAL;;QACA,IAAI,CAAC,KAAKP,SAAV,EAAqB;UACjB,IAAI,CAAC,KAAKF,gBAAV,EAA4B;YACxB,KAAKA,gBAAL,GAAwBY,KAAK,CAACC,IAAN,CAAW,KAAKZ,SAAhB,CAAxB;UACH;;UACD,KAAK,MAAMa,QAAX,IAAuB,KAAKd,gBAA5B,EAA8C;YAC1Cc,QAAQ,CAACJ,IAAT,CAAcC,KAAd;UACH;QACJ;MACJ,CAVW,CAAZ;IAWH;;IACDI,KAAK,CAACC,GAAD,EAAM;MACPpB,YAAY,CAAC,MAAM;QACf,KAAKa,cAAL;;QACA,IAAI,CAAC,KAAKP,SAAV,EAAqB;UACjB,KAAKC,QAAL,GAAgB,KAAKD,SAAL,GAAiB,IAAjC;UACA,KAAKE,WAAL,GAAmBY,GAAnB;UACA,MAAM;YAAEf;UAAF,IAAgB,IAAtB;;UACA,OAAOA,SAAS,CAACgB,MAAjB,EAAyB;YACrBhB,SAAS,CAACiB,KAAV,GAAkBH,KAAlB,CAAwBC,GAAxB;UACH;QACJ;MACJ,CAVW,CAAZ;IAWH;;IACDG,QAAQ,GAAG;MACPvB,YAAY,CAAC,MAAM;QACf,KAAKa,cAAL;;QACA,IAAI,CAAC,KAAKP,SAAV,EAAqB;UACjB,KAAKA,SAAL,GAAiB,IAAjB;UACA,MAAM;YAAED;UAAF,IAAgB,IAAtB;;UACA,OAAOA,SAAS,CAACgB,MAAjB,EAAyB;YACrBhB,SAAS,CAACiB,KAAV,GAAkBC,QAAlB;UACH;QACJ;MACJ,CATW,CAAZ;IAUH;;IACDC,WAAW,GAAG;MACV,KAAKlB,SAAL,GAAiB,KAAKH,MAAL,GAAc,IAA/B;MACA,KAAKE,SAAL,GAAiB,KAAKD,gBAAL,GAAwB,IAAzC;IACH;;IACW,IAARqB,QAAQ,GAAG;MACX,IAAIC,EAAJ;;MACA,OAAO,CAAC,CAACA,EAAE,GAAG,KAAKrB,SAAX,MAA0B,IAA1B,IAAkCqB,EAAE,KAAK,KAAK,CAA9C,GAAkD,KAAK,CAAvD,GAA2DA,EAAE,CAACL,MAA/D,IAAyE,CAAhF;IACH;;IACDM,aAAa,CAACC,UAAD,EAAa;MACtB,KAAKf,cAAL;;MACA,OAAO,MAAMc,aAAN,CAAoBC,UAApB,CAAP;IACH;;IACDC,UAAU,CAACD,UAAD,EAAa;MACnB,KAAKf,cAAL;;MACA,KAAKiB,uBAAL,CAA6BF,UAA7B;;MACA,OAAO,KAAKG,eAAL,CAAqBH,UAArB,CAAP;IACH;;IACDG,eAAe,CAACH,UAAD,EAAa;MACxB,MAAM;QAAErB,QAAF;QAAYD,SAAZ;QAAuBD;MAAvB,IAAqC,IAA3C;;MACA,IAAIE,QAAQ,IAAID,SAAhB,EAA2B;QACvB,OAAOT,kBAAP;MACH;;MACD,KAAKO,gBAAL,GAAwB,IAAxB;MACAC,SAAS,CAAC2B,IAAV,CAAeJ,UAAf;MACA,OAAO,IAAIhC,YAAJ,CAAiB,MAAM;QAC1B,KAAKQ,gBAAL,GAAwB,IAAxB;QACAL,SAAS,CAACM,SAAD,EAAYuB,UAAZ,CAAT;MACH,CAHM,CAAP;IAIH;;IACDE,uBAAuB,CAACF,UAAD,EAAa;MAChC,MAAM;QAAErB,QAAF;QAAYC,WAAZ;QAAyBF;MAAzB,IAAuC,IAA7C;;MACA,IAAIC,QAAJ,EAAc;QACVqB,UAAU,CAACT,KAAX,CAAiBX,WAAjB;MACH,CAFD,MAGK,IAAIF,SAAJ,EAAe;QAChBsB,UAAU,CAACL,QAAX;MACH;IACJ;;IACDU,YAAY,GAAG;MACX,MAAMC,UAAU,GAAG,IAAIvC,UAAJ,EAAnB;MACAuC,UAAU,CAACC,MAAX,GAAoB,IAApB;MACA,OAAOD,UAAP;IACH;;EApGmC;;EAsGxCjC,OAAO,CAACmC,MAAR,GAAiB,CAACC,WAAD,EAAcF,MAAd,KAAyB;IACtC,OAAO,IAAIvB,gBAAJ,CAAqByB,WAArB,EAAkCF,MAAlC,CAAP;EACH,CAFD;;EAtGA,OAAalC,OAAb;AAAA;AAyGA,OAAO,MAAMW,gBAAN,SAA+BX,OAA/B,CAAuC;EAC1CC,WAAW,CAACmC,WAAD,EAAcF,MAAd,EAAsB;IAC7B;IACA,KAAKE,WAAL,GAAmBA,WAAnB;IACA,KAAKF,MAAL,GAAcA,MAAd;EACH;;EACDrB,IAAI,CAACC,KAAD,EAAQ;IACR,IAAIW,EAAJ,EAAQY,EAAR;;IACA,CAACA,EAAE,GAAG,CAACZ,EAAE,GAAG,KAAKW,WAAX,MAA4B,IAA5B,IAAoCX,EAAE,KAAK,KAAK,CAAhD,GAAoD,KAAK,CAAzD,GAA6DA,EAAE,CAACZ,IAAtE,MAAgF,IAAhF,IAAwFwB,EAAE,KAAK,KAAK,CAApG,GAAwG,KAAK,CAA7G,GAAiHA,EAAE,CAACC,IAAH,CAAQb,EAAR,EAAYX,KAAZ,CAAjH;EACH;;EACDI,KAAK,CAACC,GAAD,EAAM;IACP,IAAIM,EAAJ,EAAQY,EAAR;;IACA,CAACA,EAAE,GAAG,CAACZ,EAAE,GAAG,KAAKW,WAAX,MAA4B,IAA5B,IAAoCX,EAAE,KAAK,KAAK,CAAhD,GAAoD,KAAK,CAAzD,GAA6DA,EAAE,CAACP,KAAtE,MAAiF,IAAjF,IAAyFmB,EAAE,KAAK,KAAK,CAArG,GAAyG,KAAK,CAA9G,GAAkHA,EAAE,CAACC,IAAH,CAAQb,EAAR,EAAYN,GAAZ,CAAlH;EACH;;EACDG,QAAQ,GAAG;IACP,IAAIG,EAAJ,EAAQY,EAAR;;IACA,CAACA,EAAE,GAAG,CAACZ,EAAE,GAAG,KAAKW,WAAX,MAA4B,IAA5B,IAAoCX,EAAE,KAAK,KAAK,CAAhD,GAAoD,KAAK,CAAzD,GAA6DA,EAAE,CAACH,QAAtE,MAAoF,IAApF,IAA4Fe,EAAE,KAAK,KAAK,CAAxG,GAA4G,KAAK,CAAjH,GAAqHA,EAAE,CAACC,IAAH,CAAQb,EAAR,CAArH;EACH;;EACDG,UAAU,CAACD,UAAD,EAAa;IACnB,IAAIF,EAAJ,EAAQY,EAAR;;IACA,OAAO,CAACA,EAAE,GAAG,CAACZ,EAAE,GAAG,KAAKS,MAAX,MAAuB,IAAvB,IAA+BT,EAAE,KAAK,KAAK,CAA3C,GAA+C,KAAK,CAApD,GAAwDA,EAAE,CAACc,SAAH,CAAaZ,UAAb,CAA9D,MAA4F,IAA5F,IAAoGU,EAAE,KAAK,KAAK,CAAhH,GAAoHA,EAApH,GAAyHzC,kBAAhI;EACH;;AArByC"},"metadata":{},"sourceType":"module"}